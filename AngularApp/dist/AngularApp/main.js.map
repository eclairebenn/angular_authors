{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add/add.component.css","webpack:///./src/app/add/add.component.html","webpack:///./src/app/add/add.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/display/display.component.css","webpack:///./src/app/display/display.component.html","webpack:///./src/app/display/display.component.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/quote/quote.component.css","webpack:///./src/app/quote/quote.component.html","webpack:///./src/app/quote/quote.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".add_form{\\r\\n    border: 3px solid rgb(86, 151, 86);\\r\\n    padding: 30px;\\r\\n}\\r\\n\\r\\ninput{\\r\\n    margin: 5px;\\r\\n}\\r\\n\\r\\n.error{\\r\\n    color: red;\\r\\n}\"","module.exports = \"<div class=\\\"add_form\\\">\\n  <h3><a href=\\\"/\\\">Home</a></h3>\\n  <h3>Add a new author: </h3>\\n  <div class=\\\"add_box\\\">\\n    <form (submit)=\\\"addAuthor()\\\" #formData=\\\"ngForm\\\">\\n      <h4>Name : </h4>\\n      <input \\n        type=\\\"text\\\" \\n        name=\\\"author.name\\\"\\n        required\\n        minlength=\\\"4\\\"\\n        [(ngModel)]=\\\"author.name\\\"\\n        #authName=\\\"ngModel\\\"\\n      />\\n      <br>\\n      <div *ngIf=\\\"authName.touched && authName.invalid && authName.value.length > 0\\\">\\n          <h6 *ngIf=\\\"authName.errors['required']\\\" class=\\\"error\\\">\\n            Author name is required.\\n          </h6>\\n          <h6 *ngIf=\\\"authName.errors['minlength']\\\" class=\\\"error\\\">\\n            Author name must be at least 4 characters.\\n          </h6>\\n        \\n      </div>\\n      <input [disabled]=\\\"formData.invalid\\\" type=\\\"submit\\\" value=\\\"Submit\\\">\\n      <button [routerLink]=\\\"['/']\\\">Cancel</button>\\n    </form>\\n    \\n    <div *ngIf=\\\"message\\\">\\n        <h6 class=\\\"error\\\" *ngFor=\\\"let m of message\\\">{{m}}</h6>\\n    </div>\\n  </div>  \\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit {\n  author = {\"name\": \"\"}\n  message = [];\n  constructor(private _httpService: HttpService,\n              private _route: ActivatedRoute,\n              private _router: Router) { }\n\n  ngOnInit() {\n  }\n\n  addAuthor(){\n    let observable = this._httpService.addAuthor(this.author);\n    observable.subscribe(data => {\n      if(data['error']){\n        if(data['error'].code === 11000){\n          this.message = [\"That author already exists\"]\n        }\n        else{\n          this.message = [];\n          for(let item in data['error'].errors){\n            this.message.push(data['error'].errors[item].message);\n          }           \n        }\n        console.log(data['error'])\n       \n      }\n      else{\n        this._router.navigateByUrl('/');\n      }\n      console.log(\"got the add data back\", data);\n      this.author = {\"name\": \"\"};\n    })\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DisplayComponent } from './display/display.component';\nimport { EditComponent } from './edit/edit.component';\nimport { AddComponent } from './add/add.component';\nimport { QuoteComponent } from './quote/quote.component';\n\nconst routes: Routes = [\n  { path: '', component: DisplayComponent },\n  { path: 'new', component: AddComponent },\n  { path: 'quotes/:id', component: EditComponent },\n  { path: 'write/:id', component: QuoteComponent },\n  { path: '', pathMatch: 'full', redirectTo: '/' },\n  { path: '**', component: DisplayComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".root{\\r\\n    border: 3px solid rgb(255, 136, 0);\\r\\n    padding: 30px;\\r\\n}\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"root\\\" style=\\\"text-align:center\\\">\\n  <h1>\\n    {{ title }}\\n  </h1>\\n\\n\\n</div>\\n\\n<router-outlet></router-outlet>  \\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'Dojo Quote Ranks';\n  constructor(private _httpService: HttpService){}\n  ngOnInit(){}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpService } from './http.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { DisplayComponent } from './display/display.component';\nimport { EditComponent } from './edit/edit.component';\nimport { AddComponent } from './add/add.component';\nimport { QuoteComponent } from './quote/quote.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DisplayComponent,\n    EditComponent,\n    AddComponent,\n    QuoteComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".display{\\r\\n    border: 3px solid rgb(100, 33, 100);\\r\\n    padding: 30px;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"display\\\">\\n  <h3><a href=\\\"/new\\\">Add an author</a></h3>\\n  <h3>We have quotes by: </h3>\\n  <table class=\\\"table\\\" id=\\\"author_list\\\">\\n    <tr>\\n      <th>Author</th>\\n      <th>Actions Available</th>\\n    </tr>\\n    <tr *ngFor=\\\"let author of authors\\\">\\n      <td>{{author.name}}</td>\\n      <td><button [routerLink]=\\\"['/quotes', author._id]\\\">View Quotes</button><button (click)=\\\"deleteAuthor(author)\\\">Delete</button></td>\\n    </tr>\\n  </table>  \\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-display',\n  templateUrl: './display.component.html',\n  styleUrls: ['./display.component.css']\n})\nexport class DisplayComponent implements OnInit {\n  authors = [];\n  constructor(private _httpService: HttpService) { }\n\n  ngOnInit() {\n    this.getAllAuthors();\n  }\n\n  getAllAuthors(){\n    let observable = this._httpService.getAuthors();\n    observable.subscribe(data => {\n      console.log(\"Got all author data back\", data);\n      this.authors = data['authors'];\n    })\n  }\n\n  deleteAuthor(author: any){\n    console.log(\"this is the author obj\", author)\n    let observable = this._httpService.deleteAuthor(author);\n    observable.subscribe(data => {\n      console.log(\"got delete data back\", data);\n      this.getAllAuthors();\n    })\n  }\n\n}\n","module.exports = \".quote_list{\\r\\n    border: 3px solid rgb(240, 144, 160);\\r\\n    padding: 30px;\\r\\n}\\r\\n\\r\\n.links{\\r\\n    display: inline-block;\\r\\n    margin-right: 20px;\\r\\n}\"","module.exports = \"<div class=\\\"quote_list\\\" *ngIf=\\\"found\\\">\\n  <h4 class=\\\"links\\\"><a href=\\\"/\\\">Home</a></h4>\\n  <h4 class=\\\"links\\\"><a [routerLink]=\\\"['/write', author._id]\\\">Add a quote</a></h4>\\n  <h3>Quotes by {{author.name}}</h3>\\n  <table class=\\\"table\\\">\\n    <tr>\\n      <th>Quote</th>\\n      <th>Votes</th>\\n      <th>Created At</th>\\n      <th>Actions Available</th>\\n    </tr>\\n    <tr *ngFor=\\\"let quote of author.quotes\\\">\\n      <td>\\\"{{quote.quote}}\\\"</td>\\n      <td>{{quote.vote}}</td>\\n      <td>{{quote.createdAt | date : \\\"MMMM d yyyy h:mm a\\\"}}</td>\\n      <td>\\n        <button (click)=\\\"updateQuote(quote, 1)\\\">Vote Up</button>\\n        <button (click)=\\\"updateQuote(quote, -1)\\\">Vote Down</button>\\n        <button (click)=\\\"deleteQuote(quote)\\\">Delete</button>\\n      </td>\\n    </tr>\\n  </table>\\n</div>\\n<div *ngIf=\\\"found == false\\\">\\n  <h3>We're sorry, that author could not be found in our database. Would you like to add it?</h3>\\n  <h3><a href=\\\"/new\\\">Add new author</a></h3>\\n</div>\\n\\n  <!-- <div class=\\\"edit_box\\\">\\n    <form (submit)=\\\"editAuthor()\\\" class=\\\"postForm\\\">\\n      <h3>Name : </h3>\\n      <input type=\\\"text\\\" name=\\\"author.name\\\" [(ngModel)]=\\\"author.name\\\" [placeholder]=\\\"author.name\\\"/>\\n      <button>Cancel</button>\\n      <input type=\\\"submit\\\" value=\\\"Submit\\\">\\n    </form>\\n    <h4 *ngIf=\\\"message\\\">{{message}}</h4>\\n  </div> -->\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  id: any;\n  author = {\"name\": \"\"}\n  message = \"\";\n  vote = {\"vote\": \"\"};\n  found = false;\n  quoteSelected: any;\n\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router) { }\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params) => {\n      this.id = params['id'];\n      console.log(this.id);\n      this.getOneAuthor(this.id);\n    });\n  }\n\n  getOneAuthor(id:any){\n    let observable = this._httpService.getOneAuthor(id);\n    observable.subscribe(data => {\n      if(data['author']){\n        this.found = true;\n        this.author = data['author'];\n      }\n      else{\n        this.found = false;\n      }\n      console.log(\"got data back from get one author\", data);\n    })\n  }\n\n  updateQuote(quote: any, val){\n    quote.vote += val;\n    let observable = this._httpService.updateQuote(quote, this.id)\n    observable.subscribe(data => {\n      console.log(\"got data back\", data);\n      this.quoteSelected = null;\n      this.getOneAuthor(this.id);\n      this.getOneAuthor(this.id);\n    })\n  }\n\n  deleteQuote(quote:any){\n    let observable = this._httpService.deleteQuote(quote, this.id);\n    observable.subscribe(data => {\n      console.log(\"got delete data back\", data);\n      this.getOneAuthor(this.id)\n    })\n  }\n\n\n  // editAuthor(){\n  //   console.log(\"my author obj before sending to edit author in service\", this.author)\n  //   let observable = this._httpService.editAuthor(this.author);\n  //   observable.subscribe(data => {\n  //     if(data['error']){\n  //       this.message = data['error'];\n  //     }\n  //     else{\n  //       this.message = \"Success! You have edited author \" + data['author'].name\n  //     }\n  //     console.log(\"got edit data back\", data);\n  //     this.getOneAuthor(this.id);\n  //   })\n  // }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private _http: HttpClient) { }\n\n  getAuthors(){\n    return this._http.get('/authors');\n  }\n  getOneAuthor(id: any){\n    return this._http.get('/authors/' + id)\n  }\n  addAuthor(newAuthor){\n    return this._http.post('/authors', newAuthor);\n  }\n  editAuthor(updateAuthor){\n    return this._http.put('/authors/' + updateAuthor._id, updateAuthor)\n  }\n  deleteAuthor(author: any){\n    return this._http.delete('/remove/' + author._id);\n  }\n\n  addQuote(newQuote, authorId){\n    return this._http.put('/authors/quote/'+ authorId, newQuote);\n  }\n\n  updateQuote(updateQuote, authorId){\n    return this._http.put('quotes/'+ authorId, updateQuote)\n  }\n\n  deleteQuote(deleteQuote, authorId){\n    return this._http.delete('remove/'+ authorId + '/'+ deleteQuote._id)\n  }\n}\n","module.exports = \".add_quote{\\r\\n    border: 3px solid rgb(247, 238, 113);\\r\\n    padding: 30px;\\r\\n}\\r\\n\\r\\ninput{\\r\\n    margin: 5px;\\r\\n}\\r\\n\\r\\n.error{\\r\\n    color: red;\\r\\n    margin: 5px;\\r\\n    \\r\\n}\"","module.exports = \"<div class=\\\"add_quote\\\">\\n  <h4><a href=\\\"/\\\">Home</a></h4>\\n  <h3>Provide a quote by {{author.name}} </h3>\\n  <div class=\\\"add_box\\\">\\n    <form class=\\\"formX\\\" (submit)=\\\"addQuote()\\\" #formData=\\\"ngForm\\\">\\n      <h3>Quote : </h3>\\n      <input \\n        type=\\\"text\\\" \\n        name=\\\"quote.quote\\\"\\n        required\\n        minlength=\\\"4\\\"\\n        [(ngModel)]=\\\"quote.quote\\\"\\n        #quoted=\\\"ngModel\\\"/>\\n      <br>\\n      <div *ngIf=\\\"quoted.touched && quoted.invalid\\\">\\n        <h6 *ngIf=\\\"quoted.errors['required']\\\" class=\\\"error\\\">\\n          Quote is required.\\n        </h6>\\n        <h6 *ngIf=\\\"quoted.errors['minlength']\\\" class=\\\"error\\\">\\n          Quote must be at least 4 characters.\\n        </h6>\\n      \\n      </div>\\n      <button [disabled]=\\\"formData.invalid\\\" type=\\\"submit\\\">Submit</button>\\n      <button [routerLink]=\\\"['/quotes', author._id]\\\">Cancel</button>\\n      \\n    </form>\\n    <div *ngIf=\\\"message\\\">\\n      <h6 class=\\\"error\\\" *ngFor=\\\"let m of message\\\">{{m}}</h6>\\n    </div>\\n  </div>  \\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-quote',\n  templateUrl: './quote.component.html',\n  styleUrls: ['./quote.component.css']\n})\nexport class QuoteComponent implements OnInit {\n  author = {\"name\": \"\"};\n  id: any;\n  quote = {\"quote\": \"\"};\n  message= [];\n\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router) { }\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params) => {\n      this.id = params['id'];\n      this.getOneAuthor(this.id);\n    });\n  }\n\n  getOneAuthor(id:any){\n    let observable = this._httpService.getOneAuthor(id);\n    observable.subscribe(data => {\n      this.author = data['author'];\n      console.log(\"got data back from get one author\", data);\n    })\n  }\n\n  addQuote(){\n    console.log(\"the quote to send is \", this.quote);\n    let observable = this._httpService.addQuote(this.quote, this.id);\n    observable.subscribe(data => {\n      console.log(\"got add product data back\", data);\n      this.quote = {\"quote\": \"\"};\n      if(data['error']){\n        console.log(data['error'].errors)\n        this.message = [];\n        for(let item in data['error'].errors){\n          console.log(\"the quote error message is\", data['error'].errors[item].message)\n          this.message.push(data['error'].errors[item].message);\n        }        \n      }\n      else{\n        this._router.navigateByUrl('/quotes/' + this.id)\n      }\n    })\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}